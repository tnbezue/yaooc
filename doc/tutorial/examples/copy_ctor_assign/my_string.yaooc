
#include <stdio.h>
#include <string.h>

%struct my_string {
    my_string()
    {
      this->str=NULL;
    }

    ~my_string() {
      if(this->str)
        FREE(this->str);
    }

    my_string(src) : my_string()
    {
      assign(this,src);
    }

    operator=(src)
    {
      my_string_dtor(this);  // Can call destructor directly
      this->str = src->str ? strdup(src->str) : NULL;
    }
  instance:
    char* str;
};

int main(int argc,char* argv[])
{
  my_string_t* ms = new(my_string);
  ms->str=strdup("This is a demonstration of my_string");
  my_string_t* ms2=new_copy(ms);
  printf("My string is: %s\n",ms->str);
  printf("My string 2 is: %s\n",ms2->str);
  delete(ms);
  delete(ms2);
}
