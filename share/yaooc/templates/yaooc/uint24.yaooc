#ifndef __UINT24_YAOOC_INCLUDED__
#define __UINT24_YAOOC_INCLUDED__

#if 0 // HEADER
#include <yaooc/macros.h>
#include <yaooc/stream.h>

/* Useful macros */
#define uint32_lt_cmp(p1,p2) yaooc_uint24_to_uint32((p1) < yaooc_uint24_to_uint32(p2))
#define uint32_to_yaooc_uint24 yaooc_uint24_from_uint32
#endif // HEADER
#if 0 // SOURCE
#include <string.h>

typedef union {
  struct {
#   if __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
      uint8_t not_used;
      uint8_t tbi[3];
#   else
      uint8_t tbi[3];
      uint8_t not_used;
#   endif
  };
  uint32_t ui32;
} uint32_uint24_conversion_t;
#endif  // SOURCE

struct yaooc_uint24 {
    operator<();
    operator<<();
    operator>>();
  protected:
    uint32_t to_uint32() const;
    void from_uint32(uint32_t ui);
  instance:
    uint8_t bytes_[3];
};

#endif
