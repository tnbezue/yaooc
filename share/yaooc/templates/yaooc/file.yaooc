#ifndef __YAOOC_FILE_INCLUDED__
#define __YAOOC_FILE_INCLUDED__

#include <yaooc/object.yaooc>
#if 0 //HEADER
#include <yaooc/stream.h>
#include <fcntl.h>
#ifdef _WIN32
typedef short nlink_t;
#endif
#endif //HEADER

#if 0 //SOURCE
#include <string.h>
#include <sys/stat.h>
#endif //SOURCE

class yaooc_file : yaooc_object {
		yaooc_file();
		yaooc_file(yaooc_file*);
		yaooc_file_ctor_name(const char* n);
		operator=();
		~yaooc_file();
	instance:
		struct stat* stat_;
		char* name_;
		int stat_result_;  // -2 -- stat has not been performed, -1 -- stat failed, 0 -- stat succeeded

	table:
		bool exists() const;
		dev_t dev() const;
		mode_t mode() const;
		time_t atime() const;
		time_t mtime() const;
		time_t ctime() const;
		uid_t uid() const;
		const char* name() const;
		gid_t gid() const;
		nlink_t nlink() const;
		off_t size() const;
		bool isdir() const;
		bool ischr() const;
		bool isblk() const;
		bool isreg() const;
		bool isfifo() const;
		bool islink() const;// { return stat_.st_mode & __S_IFLNK; }
		bool issock() const;// { return stat_.st_mode & __S_IFSOCK; }

	private:
		void stat();
};


#endif
