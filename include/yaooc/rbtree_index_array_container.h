#ifndef __RBTREE_INDEX_ARRAY_CONTAINER_INCLUDED__
#define __RBTREE_INDEX_ARRAY_CONTAINER_INCLUDED__

#include <yaooc/array_container.h>
typedef enum { BLACK=0, RED } yaooc_rbnode_color_t;

#define yaooc_rbnode_create(index) new_ctor(yaooc_rbnode,yaooc_rbnode_ctor_index,index)

yaooc_class_forward(yaooc_rbtree_index_array_container);

yaooc_struct(yaooc_rbnode) {
yaooc_rbnode_t* link_[2];
yaooc_rbnode_color_t color_;
unsigned int index_;
};
void yaooc_rbnode_default_ctor(pointer);
void yaooc_rbnode_dtor(pointer);
void yaooc_rbnode_copy_ctor(pointer,const_pointer);
void yaooc_rbnode_assign(pointer,const_pointer);
void yaooc_rbnode_ctor_index(pointer,va_list);
yaooc_class_table(yaooc_rbtree_index_array_container) {
  yaooc_array_container_class_table_t;
};
#define yaooc_rbtree_index_array_container_parent_class_table ((yaooc_array_container_class_table_t*)(yaooc_rbtree_index_array_container_class_table.parent_class_table_))

yaooc_class_instance(yaooc_rbtree_index_array_container) {
  yaooc_array_container_class_instance_t;
yaooc_rbnode_t* root_;
};

yaooc_class(yaooc_rbtree_index_array_container);
void yaooc_rbtree_index_array_container_dtor(pointer);
void yaooc_rbtree_index_array_container_copy_ctor(pointer,const_pointer);
void yaooc_rbtree_index_array_container_assign(pointer,const_pointer);
void yaooc_rbtree_index_array_container_ctor_ti(pointer,va_list);
 void yaooc_rbtree_index_array_container_swap(pointer,pointer);
#define yaooc_rbtree_index_array_container_increase_capacity yaooc_array_container_increase_capacity
#define yaooc_rbtree_index_array_container_size_needed yaooc_array_container_size_needed
#define yaooc_rbtree_index_array_container_size yaooc_array_container_size
#define yaooc_rbtree_index_array_container_capacity yaooc_array_container_capacity
#define yaooc_rbtree_index_array_container_empty yaooc_array_container_empty
#define yaooc_rbtree_index_array_container_begin yaooc_array_container_begin
#define yaooc_rbtree_index_array_container_end yaooc_array_container_end
#define yaooc_rbtree_index_array_container_cbegin yaooc_array_container_cbegin
#define yaooc_rbtree_index_array_container_cend yaooc_array_container_cend
 iterator yaooc_rbtree_index_array_container_find(pointer,const_pointer);
 iterator yaooc_rbtree_index_array_container_insert(pointer,const_iterator,const_pointer);
 iterator yaooc_rbtree_index_array_container_insertn(pointer,const_iterator,size_t,const_pointer);
 iterator yaooc_rbtree_index_array_container_insert_range(pointer,const_iterator,const_iterator,const_iterator);
 iterator yaooc_rbtree_index_array_container_erase(pointer,const_iterator);
 iterator yaooc_rbtree_index_array_container_erase_range(pointer,const_iterator,const_iterator);
 size_t yaooc_rbtree_index_array_container_erase_value(pointer,const_pointer);
#define yaooc_rbtree_index_array_container_at yaooc_array_container_at
#define yaooc_rbtree_index_array_container_shrink_to_fit yaooc_array_container_shrink_to_fit
#define yaooc_rbtree_index_array_container_reserve yaooc_array_container_reserve
 void yaooc_rbtree_index_array_container_resize(pointer,size_t);
 void yaooc_rbtree_index_array_container_resize_value(pointer,size_t,const_pointer);
 void yaooc_rbtree_index_array_container_clear(pointer);

#endif
